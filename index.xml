<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding人生</title>
    <link>http://gotomy.github.io/</link>
    <description>Recent content on Coding人生</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 01 Jan 2015 12:20:30 +0000</lastBuildDate>
    
	<atom:link href="http://gotomy.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>kubernetes最佳实践——来自谷歌的经验</title>
      <link>http://gotomy.github.io/post/k8s/k8s_best_practice/</link>
      <pubDate>Mon, 15 Jun 2020 22:55:06 +0800</pubDate>
      
      <guid>http://gotomy.github.io/post/k8s/k8s_best_practice/</guid>
      <description>Builing Small Containers 构造小的容器 构建小而牢固的容器镜像</description>
    </item>
    
    <item>
      <title>Segment转向微服务后重新回归单体分享</title>
      <link>http://gotomy.github.io/post/devops/to_micro_and_back/</link>
      <pubDate>Wed, 27 May 2020 11:26:06 +0800</pubDate>
      
      <guid>http://gotomy.github.io/post/devops/to_micro_and_back/</guid>
      <description>本文是对&amp;quot;To Microservices and Back Again - Why Segment Went Back to a Monolith&amp;rdquo; 的翻译，探讨 Segment将架构演变到微服务后又从微服务退回到了单体架构的过程</description>
    </item>
    
    <item>
      <title>SkyWalking分布式链路追踪</title>
      <link>http://gotomy.github.io/post/devops/skywalking/</link>
      <pubDate>Sat, 23 May 2020 10:14:06 +0800</pubDate>
      
      <guid>http://gotomy.github.io/post/devops/skywalking/</guid>
      <description>在当前微服务系统架构下，微服务系统的治理变得非常的重要，微服务系统治理的好坏关乎整个微服务项目的成败，其中分布式的链路追踪APM系统是整个微服务治理体系中比较重要的一个部分。
Skywalking是由华为工程师编写，并捐献给Apache的一个非常出色的APM系统。</description>
    </item>
    
    <item>
      <title>Mosh 6小时Python教程</title>
      <link>http://gotomy.github.io/post/python/python_6hour/</link>
      <pubDate>Sun, 17 May 2020 12:50:06 +0800</pubDate>
      
      <guid>http://gotomy.github.io/post/python/python_6hour/</guid>
      <description>print 用于终端输出</description>
    </item>
    
    <item>
      <title>Java时间处理</title>
      <link>http://gotomy.github.io/post/java/java-time/</link>
      <pubDate>Tue, 10 Sep 2019 10:14:06 +0800</pubDate>
      
      <guid>http://gotomy.github.io/post/java/java-time/</guid>
      <description>Java的时间处理以Java8作为分水岭，可以分为java8之前版本的时间处理方式，主要包括了Date、Calendar、SimpleDateFormat等几个主要的处理类。Java8版本对时间处理进行了革命性的重构，从这个版本之后所有的时间处理类统一放在了java.time包下，由LocalDate、Time、Instant等类处理。
本文主要是对Java的时间处理进行一个回顾总结，介绍java8版本之前的时间处理方式，非官方joda-time类库对java时间处理的增强补充和java8版本之后的时间处理。</description>
    </item>
    
    <item>
      <title>RabbitMq的工作模式</title>
      <link>http://gotomy.github.io/post/mq/rabbitmq/</link>
      <pubDate>Wed, 07 Aug 2019 10:14:06 +0800</pubDate>
      
      <guid>http://gotomy.github.io/post/mq/rabbitmq/</guid>
      <description>RabbitMq简介 MQ全称为Message Queue，即消息队列，RabbitMQ是由erlang语言开发，基于AMQP（Advanced Message Queue）高级消息队列协议实现的，它是一种应用程序之间的通信方法，消息队列在分布式系统开发中应用非常广泛。</description>
    </item>
    
    <item>
      <title>docker镜像国内加速</title>
      <link>http://gotomy.github.io/post/docker/docker_china_proxy/</link>
      <pubDate>Mon, 01 Jul 2019 10:14:06 +0800</pubDate>
      
      <guid>http://gotomy.github.io/post/docker/docker_china_proxy/</guid>
      <description>docker镜像国内加速 在安装kubernetes时，需要从docker.io, gro.</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>http://gotomy.github.io/about/</link>
      <pubDate>Thu, 01 Jan 2015 12:20:30 +0000</pubDate>
      
      <guid>http://gotomy.github.io/about/</guid>
      <description>自我简介 </description>
    </item>
    
    <item>
      <title>归档</title>
      <link>http://gotomy.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gotomy.github.io/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>http://gotomy.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gotomy.github.io/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>